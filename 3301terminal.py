# emulation of the 3301 telnet service

import math


gematriaprimus = (
    (u'ᚠ', 'f', 2),
    (u'ᚢ', 'v', 3),
    (u'ᚢ', 'u', 3),
    (u'ᚦ', 'T', 5),  # th
    (u'ᚩ', 'o', 7),
    (u'ᚱ', 'r', 11),
    (u'ᚳ', 'c', 13),
    (u'ᚳ', 'k', 13),
    (u'ᚷ', 'g', 17),
    (u'ᚹ', 'w', 19),
    (u'ᚻ', 'h', 23),
    (u'ᚾ', 'n', 29),
    (u'ᛁ', 'i', 31),
    (u'ᛄ', 'j', 37),
    (u'ᛇ', 'E', 41),  # eo
    (u'ᛈ', 'p', 43),
    (u'ᛉ', 'x', 47),
    (u'ᛋ', 's', 53),
    (u'ᛋ', 'z', 53),
    (u'ᛏ', 't', 59),
    (u'ᛒ', 'b', 61),
    (u'ᛖ', 'e', 67),
    (u'ᛗ', 'm', 71),
    (u'ᛚ', 'l', 73),
    (u'ᛝ', 'G', 79),  # ing
    (u'ᛝ', 'G', 79),  # ng
    (u'ᛟ', 'O', 83),  # oe
    (u'ᛞ', 'd', 89),
    (u'ᚪ', 'a', 97),
    (u'ᚫ', 'A', 101),  # ae
    (u'ᚣ', 'y', 103),
    (u'ᛡ', 'I', 107),  # ia
    (u'ᛡ', 'I', 107),  # io
    (u'ᛠ', 'X', 109)  # ea
)

latsimple = (
    ('T', 'th'),
    ('E', 'eo'),
    ('G', 'ing'),
    ('G', 'ng'),
    ('O', 'oe'),
    ('A', 'ae'),
    ('I', 'ia'),
    ('I', 'io'),
    ('X', 'ea'),
)


def is_prime(n):
    if n % 2 == 0 and n > 2:
        return False
    return all(n % i for i in range(3, int(math.sqrt(n)) + 1, 2))


def reverse(value):
    return int(str(value)[::-1])


def lat_to_sim(x):
    for sim in latsimple:
        x = x.replace(sim[1], sim[0])
    return x


def lat_to_num(x):
    return gem_map(lat_to_sim(x.lower()), 1, 2)


def gem_map(x, src, dest):
    m = {p[src]: p[dest] for p in gematriaprimus}
    return [m[c] for c in x if c in m]


if __name__ == '__main__':
    print("Welcome.")
    user_input = input()
    if user_input.isdigit():
        number = int(user_input)
        rev = reverse(number)
        factors = []
        factors_rev = []

        if is_prime(number) == True:
            if number < 10:
                print("*{}*".format(number))
            elif number > 10:
                if is_prime(rev) == False:
                    for i in range(1, rev + 1):
                        if number % i == 0:
                            factors_rev.append(i)
                    print(rev, ":", factors_rev)

                elif is_prime(rev) == True:
                    print("+{}+".format(number))

        elif is_prime(number) == False:
            if number < 10:
                for i in range(1, number + 1):
                    if number % i == 0:
                        factors.append(i)
                print(number, ":", factors)

            elif number > 10:
                for i in range(1, number + 1):
                    if number % i == 0:
                        factors.append(i)
                print(number, ":", factors)
    else:
        text = str(user_input)

        if text == 'clue':
            print("Here is a clue:")
            print("0000000: 1fd9d91c746f141803d010071f18f0028a0b69763d1d19037daa222b4f46b3264d21ed1d31c514982b502e5"
                  "58ffe583b2e018e62bfe44ac063caf344469c53c7da")
            print("0000041: 72beefe909de045a3df0e8b7320d570516b431c42f73c08e39af504fd00e88bb323ae09f436395fe1955dd9"
                  "9251693a5971a1738871354ebebf6e74f94b21f7a3b")
            print("0000082: 346063d15bd2f0fbacc86d74b6aaaac0d44b6c54300b5eabb9d699f854ae855385fb5bce0a4304964bf6a90"
                  "20acb540921d17844f39856a97a2f2623547c61009a")
            print("00000c3: 421b1756748009c31b9311745f5a2e661175c8b7958fe459fae4d96e9323b29fd21f83565c60f69d51da75d"
                  "daf6f06283b77fc0362ba41e570e70a6b6efa2a34b0")
            print("0000104: d9f1d2dde221bf636d9c7c47b6291d4bf7b3389916c46652edf7daf8efa2d0d0909f96b57a3310a3c029da9"
                  "0481eeb4b0d53620be26ab5fb5370bfd4edc49514b2")
            print("0000145: 2c43c402fc58554b1556d092d7410fb5cd8ba8d92af3cbbc023f3787c3ece9afee71cef31d63b826bd2292b"
                  "fac22c6e5cc034237575f1737e2aa24262deced106b")
            print("0000186: 89e2032ebe6ab51c8d0cf0fe2394b0c5c8d609b1c54bd2178631f9c0f2350d7a798e52b44a50517bc0dd245"
                  "db004fe0ca6460c02e81699fdea7494165c96ed4bfd")
            print("00001c7: 45d26598bf08c3d8e5486ead896f29bd0b996515157448132ea6e02f8f9d23108e69874956fdf69f2ced112"
                  "f1a4924c8ec35182253c5288be0e3aa2ccbf7b7affc")
            print("0000208: d1dc90726bb30c26d41f5854a41b2ea0dc68345aa3bb11b8688c407d36cdd4cdde47d26348d75397e1636b0"
                  "6dbae541452c1173b59b70bc37fe28615c5636158a0")
            print("0000249: 38ab6ba758d90d2b93402505265e8374a7f5d9a7528837aad79d8e6ca20b8deac1a67755b7db9f79835a463"
                  "bce04ded91a13d72c57950d95fd2f65d207299596f1")
            print("000028a: 82d27d220e44a4f95d1abb5ad1d133133b4c787721c0a3ddd32c311ffb6d8b8bc9df64658c9156bd0c1393a"
                  "35236ecb18cdb93cfa5c23ccee333704fe1606fa063")
            print("00002cb: 2307b427788df8036c164ce171d42fd3d0fded1bbd8690bff52e35536a3aaaf9fa6872178f94b35b056e860"
                  "d637c81664a1e1310df56344ddf19bf4fa4f2a28193")
            print("000030c: dc34cdd5423ef2cbe680fbc015ce9f6cd71424789674424ef787a1e7aec7f22d487af53bfe5e4ed4b8f2072"
                  "79573f00c7270e136095eb70fe6c465e0291297d059")
            print("000034d: 376088f46e159efee300d64eea644a6b5a7038f411d0f4efd67446836860f1084a01e180bacec753403fe6a"
                  "845e02f82f7781eba82d2dfb38274c156f7b546cb19")
            print("000038e: b4ba5b8e84f85645830eeb3d70207d299b649e8d592536e4df0b03888ca3740d9de623d00aea1e0adfcf23d"
                  "92c6dde711d187ca9d592c31ab00ac6e217892ccefd")
            print("00003cf: 1be10b")
            print("Offset: 0, Skip: 0, Col: 65, Line: 16.")

        elif text == 'primes':
            print('2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,1229,1231,1237,1249,1259,1277,1279,1283'
                  ',1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433'
                  ',1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559'
                  ',1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,'
                  '1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,'
                  '1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,'
                  '2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,'
                  '2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,'
                  '2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,'
                  '2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,'
                  '2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,'
                  '2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,'
                  '2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,'
                  '3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,'
                  '3221,3229,3251,3253,3257,3259,3271,3299,3301')

        elif text == 'get 3301':
            print('A message for you:')
            print('0000000:2d2d2d2d2d424547494e20504750205349474e4544204d4553534147452d2d2d2d2d0a486173683a20534841310a'
                  '0a20202020200a5665727920676f6f642e0a20')
            print('0000041:20200a596f75206861766520646f6e652077656c6c20746f20636f6d652074686973206661722e0a20200a787378'
                  '6e616b73696374366567786b712e6f6e696f6e')
            print('0000082:0a20200a476f6f64206c75636b2e0a2020200a333330310a20202020200a2d2d2d2d2d424547494e205047502053'
                  '49474e41545552452d2d2d2d2d0a5665727369')
            print('00000c3:6f6e3a20476e7550472076312e342e31312028474e552f4c696e7578290a0a69514963424145424167414742514a'
                  '513653304841416f4a45426766416556364e51')
            print('0000104:6b502f4a3051414c44716133564a7939784c4c6c6749356a5068524970340a66786562624e6874454c4f4859466b'
                  '44355a397a745159476c65376c4b504d386c6b')
            print('0000145:4d536e636949593035394b4969354e53545637493937734a626f473377740a6b6848745a674e5277317632575135'
                  '7575724375356c31772b38342f4c354a7a324e')
            print('0000186:6d456c784f427a57723638646c5159743271664251786b327a522f6654490a544c43454776465a746c6e724e6642'
                  '6b376a7349794a59635858506761625334376f')
            print('00001c7:5039764f45586c42312b506d30433775505042504e3761716b665550476c0a6f3166326873634a66374a65324476'
                  '625a742b3665787859736d3537467039353358')
            print('0000208:414e41642f557046567a542f3835325867363367745a72492b536d66335a0a4256636a70437a7948337753385230'
                  '694d2b7270303243774a704a7a7357474c7865')
            print('0000249:51476d584c325358424234337a565a414a716c355564584c5447586b62640a6e504d64332f43624a2b6c37724f30'
                  '5941673570334a66344b617558375a64365a63')
            print('000028a:3277484b4c4f76666a5176455758495931434d68493638426a30725a6f2f0a4d2f666933313346465450416d3678'
                  '684b52762f74482f387756726172326a593777')
            print('00002cb:6e45385878685273793734415a35477141326f484d6566544171335975570a35505838733638324a34706b44554b'
                  '48476134793635766a49703136706d45496e4d')
            print('000030c:414c4a4762777a366d7461754251716c53364152735166656b446e336f5a0a796f73532b675743336a6449764835'
                  '733557555147566c376a797a3974342b335467')
            print('000034d:35635439526e367058324e564e585378677a585842346e493258727259610a346b517235615742386c7373617633'
                  '72796a3543673246486c312b4d4b4f30675976')
            print('000038e:2f554633515437354d6978514d75344d2b3577436e4e656b676675794f360a5a7679627a70347334537a526a6b6b'
                  '39734d4d360a3d5759564f0a2d2d2d2d2d454e')
            print('00003cf:4420504750205349474e41545552452d2d2d2d2d0a')
            print('Offset:3301,Skip:0,Col:65,Line:16.')

        elif 'count' in text:
            output = lat_to_num(user_input)
            print(sum(output[5:]))
